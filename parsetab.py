
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATOM_Q CAR CDR COND CONS DEFINE DIVIDE EQ_Q LAMBDA LPAREN MINUS NAME NIL NUMBER PLUS QUOTE RPAREN TIMES\n    expression : LPAREN PLUS expression expression RPAREN\n               | LPAREN MINUS expression expression RPAREN\n               | LPAREN TIMES expression expression RPAREN\n               | LPAREN DIVIDE expression expression RPAREN\n    \n    expression : LPAREN CDR pair RPAREN\n               | LPAREN CDR quote RPAREN\n               | LPAREN COND condition RPAREN\n               | LPAREN CAR pair RPAREN\n               | LPAREN CAR quote RPAREN\n               | LPAREN EQ_Q expression expression RPAREN\n               | LPAREN ATOM_Q expression RPAREN\n    \n    quote : LPAREN QUOTE quote_items RPAREN\n    \n    quote_items : expression quote_items\n    \n    quote_items : expression\n    \n    expression : quote\n    \n    expression : pair\n    \n    pair : LPAREN CONS expression expression RPAREN\n    \n    expression : LPAREN DEFINE NAME expression RPAREN\n    \n    expression : LPAREN LAMBDA LPAREN args RPAREN expression RPAREN\n    \n    condition : LPAREN  LPAREN expression expression RPAREN RPAREN\n    \n    condition : LPAREN expression expression condition RPAREN\n    \n    args : args NAME\n    \n    args : NAME\n    \n    expression : item\n    \n    item : NUMBER\n    \n    item : NAME\n    \n    item : NIL\n    '
    
_lr_action_items = {'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,29,33,35,38,39,44,45,46,47,48,49,50,52,56,59,60,61,62,63,64,65,66,67,69,75,],[2,-16,-15,-26,-24,-25,-27,2,2,2,2,26,29,26,2,2,36,2,2,2,2,2,2,46,2,2,2,2,-5,-6,2,2,-7,-8,-9,-11,-12,-1,-2,-3,-4,2,29,-10,-18,2,-17,-19,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,16,17,20,21,22,23,24,25,29,33,35,38,39,44,45,46,47,48,49,50,52,56,59,60,61,62,63,65,66,67,69,75,],[7,-16,-15,-26,-24,-25,-27,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-5,-6,7,7,-7,-8,-9,-11,-12,-1,-2,-3,-4,7,-10,-18,7,-17,-19,]),'NAME':([0,3,4,5,6,7,8,9,10,11,12,16,17,18,20,21,22,23,24,25,29,33,35,36,38,39,44,45,46,47,48,49,50,52,54,55,56,59,60,61,62,63,65,66,67,68,69,75,],[5,-16,-15,-26,-24,-25,-27,5,5,5,5,5,5,35,5,5,5,5,5,5,5,5,5,55,5,5,-5,-6,5,5,-7,-8,-9,-11,68,-23,-12,-1,-2,-3,-4,5,-10,-18,5,-22,-17,-19,]),'NIL':([0,3,4,5,6,7,8,9,10,11,12,16,17,20,21,22,23,24,25,29,33,35,38,39,44,45,46,47,48,49,50,52,56,59,60,61,62,63,65,66,67,69,75,],[8,-16,-15,-26,-24,-25,-27,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-5,-6,8,8,-7,-8,-9,-11,-12,-1,-2,-3,-4,8,-10,-18,8,-17,-19,]),'$end':([1,3,4,5,6,7,8,44,45,48,49,50,52,56,59,60,61,62,65,66,69,75,],[0,-16,-15,-26,-24,-25,-27,-5,-6,-7,-8,-9,-11,-12,-1,-2,-3,-4,-10,-18,-17,-19,]),'PLUS':([2,46,],[9,9,]),'MINUS':([2,46,],[10,10,]),'TIMES':([2,46,],[11,11,]),'DIVIDE':([2,46,],[12,12,]),'CDR':([2,46,],[13,13,]),'COND':([2,46,],[14,14,]),'CAR':([2,46,],[15,15,]),'EQ_Q':([2,46,],[16,16,]),'ATOM_Q':([2,46,],[17,17,]),'DEFINE':([2,46,],[18,18,]),'LAMBDA':([2,46,],[19,19,]),'QUOTE':([2,26,46,],[20,20,20,]),'CONS':([2,26,46,],[21,21,21,]),'RPAREN':([3,4,5,6,7,8,27,28,30,31,32,34,37,38,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,68,69,70,71,72,73,74,75,76,],[-16,-15,-26,-24,-25,-27,44,45,48,49,50,52,56,-14,59,60,61,62,-5,-6,-7,-8,-9,65,-11,66,67,-23,-12,-13,69,-1,-2,-3,-4,-10,-18,-22,-17,73,74,75,76,-21,-19,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,9,10,11,12,16,17,20,21,22,23,24,25,29,33,35,38,39,46,47,63,67,],[1,22,23,24,25,33,34,38,39,40,41,42,43,47,51,53,38,58,63,64,70,72,]),'pair':([0,9,10,11,12,13,15,16,17,20,21,22,23,24,25,29,33,35,38,39,46,47,63,67,],[3,3,3,3,3,27,31,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'quote':([0,9,10,11,12,13,15,16,17,20,21,22,23,24,25,29,33,35,38,39,46,47,63,67,],[4,4,4,4,4,28,32,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'item':([0,9,10,11,12,16,17,20,21,22,23,24,25,29,33,35,38,39,46,47,63,67,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'condition':([14,64,],[30,71,]),'quote_items':([20,38,],[37,57,]),'args':([36,],[54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> LPAREN PLUS expression expression RPAREN','expression',5,'p_expression_bin_operate','parser.py',8),
  ('expression -> LPAREN MINUS expression expression RPAREN','expression',5,'p_expression_bin_operate','parser.py',9),
  ('expression -> LPAREN TIMES expression expression RPAREN','expression',5,'p_expression_bin_operate','parser.py',10),
  ('expression -> LPAREN DIVIDE expression expression RPAREN','expression',5,'p_expression_bin_operate','parser.py',11),
  ('expression -> LPAREN CDR pair RPAREN','expression',4,'p_expression_single_operate','parser.py',18),
  ('expression -> LPAREN CDR quote RPAREN','expression',4,'p_expression_single_operate','parser.py',19),
  ('expression -> LPAREN COND condition RPAREN','expression',4,'p_expression_single_operate','parser.py',20),
  ('expression -> LPAREN CAR pair RPAREN','expression',4,'p_expression_single_operate','parser.py',21),
  ('expression -> LPAREN CAR quote RPAREN','expression',4,'p_expression_single_operate','parser.py',22),
  ('expression -> LPAREN EQ_Q expression expression RPAREN','expression',5,'p_expression_single_operate','parser.py',23),
  ('expression -> LPAREN ATOM_Q expression RPAREN','expression',4,'p_expression_single_operate','parser.py',24),
  ('quote -> LPAREN QUOTE quote_items RPAREN','quote',4,'p_quote','parser.py',31),
  ('quote_items -> expression quote_items','quote_items',2,'p_quote_items','parser.py',37),
  ('quote_items -> expression','quote_items',1,'p_quote_item','parser.py',43),
  ('expression -> quote','expression',1,'p_expression_quote','parser.py',50),
  ('expression -> pair','expression',1,'p_expression_pair','parser.py',56),
  ('pair -> LPAREN CONS expression expression RPAREN','pair',5,'p_pair','parser.py',63),
  ('expression -> LPAREN DEFINE NAME expression RPAREN','expression',5,'p_expression_define','parser.py',70),
  ('expression -> LPAREN LAMBDA LPAREN args RPAREN expression RPAREN','expression',7,'p_expression_lambda','parser.py',77),
  ('condition -> LPAREN LPAREN expression expression RPAREN RPAREN','condition',6,'p_condition_single','parser.py',84),
  ('condition -> LPAREN expression expression condition RPAREN','condition',5,'p_condition_multi','parser.py',91),
  ('args -> args NAME','args',2,'p_args_multi','parser.py',99),
  ('args -> NAME','args',1,'p_args_single','parser.py',106),
  ('expression -> item','expression',1,'p_expression_item','parser.py',113),
  ('item -> NUMBER','item',1,'p_item_number','parser.py',120),
  ('item -> NAME','item',1,'p_item_name','parser.py',127),
  ('item -> NIL','item',1,'p_item_nil','parser.py',134),
]
