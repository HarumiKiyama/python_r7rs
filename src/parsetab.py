# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ATOM_Q CAR CDR COND CONS DEFINE DIV EQ_Q LAMBDA LPAREN MUL NAME NIL NUMBER QUOTE RPAREN SUB\n    expression : LPAREN ADD expression expression RPAREN\n               | LPAREN SUB expression expression RPAREN\n               | LPAREN MUL expression expression RPAREN\n               | LPAREN DIV expression expression RPAREN\n               | LPAREN EQ_Q expression expression RPAREN\n    \n    expression : lambda\n               | quote\n               | item\n               | pair\n               | apply\n               | define\n    \n    expression : LPAREN CDR pair RPAREN\n               | LPAREN CDR quote RPAREN\n               | LPAREN COND condition RPAREN\n               | LPAREN CAR pair RPAREN\n               | LPAREN CAR quote RPAREN\n               | LPAREN ATOM_Q expression RPAREN\n    \n    quote : LPAREN QUOTE quote_items RPAREN\n    \n    quote_items : expression quote_items\n    \n    quote_items : expression\n    \n    pair : LPAREN CONS expression expression RPAREN\n    \n    define : LPAREN DEFINE NAME expression RPAREN\n    \n    lambda : LPAREN LAMBDA LPAREN args RPAREN expression RPAREN\n    \n    apply : LPAREN lambda args RPAREN\n          | LPAREN NAME args RPAREN\n    \n    condition : LPAREN  LPAREN expression expression RPAREN RPAREN\n    \n    condition : LPAREN expression expression condition RPAREN\n    \n    args : args item\n    \n    args : item\n    \n    item : NUMBER\n    \n    item : NAME\n    \n    item : NIL\n    '

_lr_action_items = {'LPAREN': (
[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48,
 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, ],
[2, 12, -6, -7, -8, -9, -10, -11, -30, -31, -32, 2, 2, 2, 2, 2, 33, 36, 33, 2, 41, 2, 2, 2, 2, 2, 2, 2, 56, 2, 2, 2,
 -12, -13, 2, 2, -14, -15, -16, -17, -18, -24, -25, -1, -2, -3, -4, -5, 2, -6, -31, 36, 2, -21, -22, -23, ]),
                    'NUMBER': (
                    [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 41,
                     43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75,
                     76, 77, 79, 80, 81, 87, ],
                    [9, -6, -7, -8, -9, -10, -11, -30, -31, -32, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                     9, 9, -29, 9, 9, -12, -13, 9, 9, -14, -15, -16, -17, 9, -18, -24, -28, -25, -1, -2, -3, -4, -5, 9,
                     9, 9, 9, -21, -22, -23, ]), 'NAME': (
    [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 41, 43, 44,
     45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81,
     87, ],
    [10, 26, -6, -7, -8, -9, -10, -11, -30, -31, -32, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 48, 10, 10, 10, 10, 10,
     10, 10, 10, 10, 10, -29, 10, 10, -12, -13, 77, 10, -14, -15, -16, -17, 10, -18, -24, -28, -25, -1, -2, -3, -4, -5,
     10, 10, 10, 10, -21, -22, -23, ]), 'NIL': (
    [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 41, 43, 44, 45, 46,
     47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 87, ],
    [11, -6, -7, -8, -9, -10, -11, -30, -31, -32, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
     11, 11, 11, -29, 11, 11, -12, -13, 11, 11, -14, -15, -16, -17, 11, -18, -24, -28, -25, -1, -2, -3, -4, -5, 11, 11,
     11, 11, -21, -22, -23, ]), '$end': (
    [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 54, 55, 58, 59, 60, 61, 63, 66, 68, 70, 71, 72, 73, 74, 80, 81, 87, ],
    [0, -6, -7, -8, -9, -10, -11, -30, -31, -32, -12, -13, -14, -15, -16, -17, -18, -24, -25, -1, -2, -3, -4, -5, -21,
     -22, -23, ]), 'ADD': ([2, 56, ], [13, 13, ]), 'SUB': ([2, 56, ], [14, 14, ]), 'MUL': ([2, 56, ], [15, 15, ]),
                    'DIV': ([2, 56, ], [16, 16, ]), 'EQ_Q': ([2, 56, ], [17, 17, ]), 'CDR': ([2, 56, ], [18, 18, ]),
                    'COND': ([2, 56, ], [19, 19, ]), 'CAR': ([2, 56, ], [20, 20, ]), 'ATOM_Q': ([2, 56, ], [21, 21, ]),
                    'LAMBDA': ([2, 12, 56, ], [22, 22, 22, ]), 'QUOTE': ([2, 33, 56, ], [23, 23, 23, ]),
                    'CONS': ([2, 33, 56, ], [24, 24, 24, ]), 'DEFINE': ([2, 56, ], [27, 27, ]), 'RPAREN': (
    [3, 4, 5, 6, 7, 8, 9, 10, 11, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60,
     61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, ],
    [-6, -7, -8, -9, -10, -11, -30, -31, -32, 54, 55, 58, 59, 60, 61, 63, -20, 66, -29, 68, 70, 71, 72, 73, 74, -12,
     -13, -14, -15, -16, -17, 79, -18, -19, 80, -24, -28, -25, 81, -1, -2, -3, -4, -5, -21, -22, 85, 86, 87, 88, -27,
     -23, -26, ]), }

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:  _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression': (
[0, 13, 14, 15, 16, 17, 21, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48, 56, 57, 75, 79, ],
[1, 28, 29, 30, 31, 32, 40, 43, 44, 49, 50, 51, 52, 53, 57, 43, 65, 69, 75, 78, 82, 84, ]), 'lambda': (
[0, 2, 13, 14, 15, 16, 17, 21, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48, 56, 57, 75, 79, ],
[3, 25, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 76, 3, 3, 3, ]), 'quote': (
[0, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48, 56, 57, 75, 79, ],
[4, 4, 4, 4, 4, 4, 35, 39, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, ]), 'item': (
[0, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 41, 43, 44, 45, 47, 48, 56, 57, 62, 75, 76, 77,
 79, ], [5, 5, 5, 5, 5, 5, 5, 5, 5, 46, 46, 5, 5, 5, 5, 5, 5, 46, 5, 5, 67, 67, 5, 5, 5, 67, 5, 46, 46, 5, ]), 'pair': (
[0, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48, 56, 57, 75, 79, ],
[6, 6, 6, 6, 6, 6, 34, 38, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, ]), 'apply': (
[0, 13, 14, 15, 16, 17, 21, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48, 56, 57, 75, 79, ],
[7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, ]), 'define': (
[0, 13, 14, 15, 16, 17, 21, 23, 24, 28, 29, 30, 31, 32, 36, 43, 44, 48, 56, 57, 75, 79, ],
[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, ]), 'condition': ([19, 78, ], [37, 83, ]),
                  'quote_items': ([23, 43, ], [42, 64, ]), 'args': ([25, 26, 41, 76, 77, ], [45, 47, 62, 45, 47, ]), }

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto: _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    ('expression -> LPAREN ADD expression expression RPAREN', 'expression', 5, 'p_expression_bin_operate', 'parser.py',
     10),
    ('expression -> LPAREN SUB expression expression RPAREN', 'expression', 5, 'p_expression_bin_operate', 'parser.py',
     11),
    ('expression -> LPAREN MUL expression expression RPAREN', 'expression', 5, 'p_expression_bin_operate', 'parser.py',
     12),
    ('expression -> LPAREN DIV expression expression RPAREN', 'expression', 5, 'p_expression_bin_operate', 'parser.py',
     13),
    ('expression -> LPAREN EQ_Q expression expression RPAREN', 'expression', 5, 'p_expression_bin_operate', 'parser.py',
     14),
    ('expression -> lambda', 'expression', 1, 'p_expression_equal', 'parser.py', 22),
    ('expression -> quote', 'expression', 1, 'p_expression_equal', 'parser.py', 23),
    ('expression -> item', 'expression', 1, 'p_expression_equal', 'parser.py', 24),
    ('expression -> pair', 'expression', 1, 'p_expression_equal', 'parser.py', 25),
    ('expression -> apply', 'expression', 1, 'p_expression_equal', 'parser.py', 26),
    ('expression -> define', 'expression', 1, 'p_expression_equal', 'parser.py', 27),
    ('expression -> LPAREN CDR pair RPAREN', 'expression', 4, 'p_expression_single_operate', 'parser.py', 34),
    ('expression -> LPAREN CDR quote RPAREN', 'expression', 4, 'p_expression_single_operate', 'parser.py', 35),
    ('expression -> LPAREN COND condition RPAREN', 'expression', 4, 'p_expression_single_operate', 'parser.py', 36),
    ('expression -> LPAREN CAR pair RPAREN', 'expression', 4, 'p_expression_single_operate', 'parser.py', 37),
    ('expression -> LPAREN CAR quote RPAREN', 'expression', 4, 'p_expression_single_operate', 'parser.py', 38),
    ('expression -> LPAREN ATOM_Q expression RPAREN', 'expression', 4, 'p_expression_single_operate', 'parser.py', 39),
    ('quote -> LPAREN QUOTE quote_items RPAREN', 'quote', 4, 'p_quote', 'parser.py', 47),
    ('quote_items -> expression quote_items', 'quote_items', 2, 'p_quote_items', 'parser.py', 54),
    ('quote_items -> expression', 'quote_items', 1, 'p_quote_item', 'parser.py', 61),
    ('pair -> LPAREN CONS expression expression RPAREN', 'pair', 5, 'p_pair', 'parser.py', 68),
    ('define -> LPAREN DEFINE NAME expression RPAREN', 'define', 5, 'p_define', 'parser.py', 75),
    ('lambda -> LPAREN LAMBDA LPAREN args RPAREN expression RPAREN', 'lambda', 7, 'p_lambda', 'parser.py', 82),
    ('apply -> LPAREN lambda args RPAREN', 'apply', 4, 'p_apply', 'parser.py', 89),
    ('apply -> LPAREN NAME args RPAREN', 'apply', 4, 'p_apply', 'parser.py', 90),
    (
    'condition -> LPAREN LPAREN expression expression RPAREN RPAREN', 'condition', 6, 'p_condition_single', 'parser.py',
    97),
    ('condition -> LPAREN expression expression condition RPAREN', 'condition', 5, 'p_condition_multi', 'parser.py',
     104),
    ('args -> args item', 'args', 2, 'p_args_multi', 'parser.py', 112),
    ('args -> item', 'args', 1, 'p_args_single', 'parser.py', 119),
    ('item -> NUMBER', 'item', 1, 'p_item_number', 'parser.py', 126),
    ('item -> NAME', 'item', 1, 'p_item_name', 'parser.py', 133),
    ('item -> NIL', 'item', 1, 'p_item_nil', 'parser.py', 140),
]
